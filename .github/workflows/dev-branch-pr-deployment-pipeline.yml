name: Build and Deploy

on:
  push:
    branches:
      - development

jobs:
  build-and-push-docker-image:
    name: Build and push a new docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code from the Github repository
        uses: actions/checkout@v4

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_ACCOUNT_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build a new docker image
        run: docker build -t ${{ vars.DOCKER_HUB_ACCOUNT_NAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest-version .

      - name: Push a new docker image into Dockerhub
        run: docker push ${{ vars.DOCKER_HUB_ACCOUNT_NAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest-version

  deploy-app-to-server:
    name: Deploy application to remote server via SSH
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Set DOCKER_IMAGE_TAG
        run: echo "DOCKER_IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Deploy image via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          port: ${{ secrets.DEV_SSH_PORT }}
          username: ${{ secrets.DEV_SSH_USER }}
          password: ${{ secrets.DEV_SSH_PASSWORD }}
          script: |
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ vars.DOCKER_HUB_ACCOUNT_NAME }} --password-stdin
            docker stop ${{ vars.DOCKER_CONTAINER_NAME }} || true
            docker rm ${{ vars.DOCKER_CONTAINER_NAME }} || true
            docker rmi ${{ vars.DOCKER_HUB_ACCOUNT_NAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest-version || true
            docker pull ${{ vars.DOCKER_HUB_ACCOUNT_NAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest-version 
            docker run -d --name latte-frontend --network=iced-latte-network zufarexplainedit/iced-latte-frontend:latest-version
